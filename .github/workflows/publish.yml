name: Publish Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (major, minor, patch, or explicit version)'
        required: true
        default: 'patch'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 10.8.0
          run_install: false
          
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Run tests
        run: pnpm test
        
      - name: Bump version (if workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }}
          fi
        
      - name: Build package
        run: pnpm run build || echo "No build script found, skipping build step"
        
      - name: Publish to npm
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Push version changes (if workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          git push
          git push --tags
          
          # Create a release if it doesn't exist already
          if ! gh release view v${PACKAGE_VERSION} &>/dev/null; then
            gh release create v${PACKAGE_VERSION} --title "v${PACKAGE_VERSION}" --generate-notes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}